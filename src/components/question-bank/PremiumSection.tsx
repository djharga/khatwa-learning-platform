'use client';

import { useState, useMemo } from 'react';
import { motion } from 'framer-motion';
import {
  Crown,
  Star,
  Award,
  TrendingUp,
  BarChart3,
  Brain,
  Target,
  Clock,
  CheckCircle,
  Zap,
  Shield,
  Users,
  BookOpen,
  Play,
  CreditCard,
  Gift,
  Sparkles,
  Trophy,
  Medal,
  Gem,
} from 'lucide-react';
import QuestionBank from '@/components/fellowship/QuestionBank';
import toast from 'react-hot-toast';

interface Question {
  id: string;
  question: string;
  options: string[];
  correctAnswer: number;
  explanation: string;
  difficulty: 'ุณูู' | 'ูุชูุณุท' | 'ุตุนุจ';
  category: string;
  points: number;
  tags: string[];
  createdAt: string;
  updatedAt: string;
  usageCount: number;
  successRate: number;
  aiGenerated?: boolean;
}

interface PremiumSectionProps {
  questions: Question[];
  onQuizComplete?: (results: any) => void;
  isSubscribed?: boolean;
}

const PremiumSection = ({ questions, onQuizComplete, isSubscribed = false }: PremiumSectionProps) => {
  const [showQuiz, setShowQuiz] = useState(false);
  const [selectedQuestions, setSelectedQuestions] = useState<Question[]>([]);
  const [quizType, setQuizType] = useState<'certification' | 'practice' | 'challenge'>('practice');

  // ุฃุณุฆูุฉ ูููุฒุฉ (ุจุงูู ุงูุฃุณุฆูุฉ ุจุนุฏ ุงููุฌุงููุฉ)
  const premiumQuestions = useMemo(() => {
    return questions.slice(50); // ุจุงูู ุงูุฃุณุฆูุฉ ุจุนุฏ ุงูู 50 ุงููุฌุงููุฉ
  }, [questions]);

  // ุฅุญุตุงุฆูุงุช ุงูุฃุณุฆูุฉ ุงููููุฒุฉ
  const stats = useMemo(() => {
    const total = premiumQuestions.length;
    const easy = premiumQuestions.filter(q => q.difficulty === 'ุณูู').length;
    const medium = premiumQuestions.filter(q => q.difficulty === 'ูุชูุณุท').length;
    const hard = premiumQuestions.filter(q => q.difficulty === 'ุตุนุจ').length;
    const avgSuccessRate = premiumQuestions.reduce((sum, q) => sum + q.successRate, 0) / total || 0;
    const categories = [...new Set(premiumQuestions.map(q => q.category))];
    const aiGenerated = premiumQuestions.filter(q => q.aiGenerated).length;

    return { total, easy, medium, hard, avgSuccessRate, categories, aiGenerated };
  }, [premiumQuestions]);

  // ุจุฏุก ุงุฎุชุจุงุฑ ุงูุดูุงุฏุฉ
  const startCertificationQuiz = () => {
    if (!isSubscribed) {
      toast.error('ูุฌุจ ุงูุงุดุชุฑุงู ูู ุงูุจุงูุฉ ุงููููุฒุฉ ูููุตูู ูุงุฎุชุจุงุฑุงุช ุงูุดูุงุฏุฉ');
      return;
    }
    const shuffled = [...premiumQuestions].sort(() => Math.random() - 0.5);
    const quizQuestions = shuffled.slice(0, 15); // 15 ุณุคุงู ููุดูุงุฏุฉ
    setSelectedQuestions(quizQuestions);
    setQuizType('certification');
    setShowQuiz(true);
  };

  // ุจุฏุก ุงุฎุชุจุงุฑ ุชุฏุฑูุจู
  const startPracticeQuiz = () => {
    if (!isSubscribed) {
      toast.error('ูุฌุจ ุงูุงุดุชุฑุงู ูู ุงูุจุงูุฉ ุงููููุฒุฉ ูููุตูู ููุงุฎุชุจุงุฑุงุช ุงูุชุฏุฑูุจูุฉ');
      return;
    }
    const shuffled = [...premiumQuestions].sort(() => Math.random() - 0.5);
    const quizQuestions = shuffled.slice(0, 25); // 25 ุณุคุงู ุชุฏุฑูุจู
    setSelectedQuestions(quizQuestions);
    setQuizType('practice');
    setShowQuiz(true);
  };

  // ุจุฏุก ุชุญุฏู
  const startChallengeQuiz = () => {
    if (!isSubscribed) {
      toast.error('ูุฌุจ ุงูุงุดุชุฑุงู ูู ุงูุจุงูุฉ ุงููููุฒุฉ ูููุตูู ููุชุญุฏูุงุช');
      return;
    }
    const hardQuestions = premiumQuestions.filter(q => q.difficulty === 'ุตุนุจ');
    const shuffled = [...hardQuestions].sort(() => Math.random() - 0.5);
    const quizQuestions = shuffled.slice(0, 10); // 10 ุฃุณุฆูุฉ ุตุนุจุฉ
    setSelectedQuestions(quizQuestions);
    setQuizType('challenge');
    setShowQuiz(true);
  };

  // ุจุฏุก ุชุฌุฑุจุฉ ูุฌุงููุฉ
  const startFreeTrial = () => {
    const shuffled = [...premiumQuestions].sort(() => Math.random() - 0.5);
    const quizQuestions = shuffled.slice(0, 5); // 5 ุฃุณุฆูุฉ ุชุฌุฑูุจูุฉ
    setSelectedQuestions(quizQuestions);
    setQuizType('practice');
    setShowQuiz(true);
    toast.success('ุฌุฑุจ ุงูุจุงูุฉ ุงููููุฒุฉ ูุฌุงูุงู ููุฏุฉ 7 ุฃูุงู!');
  };

  const handleQuizComplete = (results: any) => {
    if (onQuizComplete) {
      onQuizComplete(results);
    }
    setShowQuiz(false);
    setSelectedQuestions([]);

    if (quizType === 'certification' && results.score >= 80) {
      toast.success('๐ ุชูุงูููุง! ุญุตูุช ุนูู ุดูุงุฏุฉ ูุนุชูุฏุฉ ูู ุงููุฑุงุฌุนุฉ ุงูุฏุงุฎููุฉ');
    } else if (quizType === 'challenge' && results.score >= 90) {
      toast.success('๐ ุฃุฏุงุก ููุชุงุฒ! ุฃูููุช ุงูุชุญุฏู ุจูุฌุงุญ');
    } else {
      toast.success('ุชู ุฅููุงุก ุงูุงุฎุชุจุงุฑ ุจูุฌุงุญ!');
    }
  };

  if (showQuiz && selectedQuestions.length > 0) {
    const quizConfig = {
      certification: { title: 'ุงุฎุชุจุงุฑ ุงูุดูุงุฏุฉ ุงููุนุชูุฏุฉ', timeLimit: 30, description: '15 ุณุคุงู โข 30 ุฏูููุฉ โข ุดูุงุฏุฉ ูุนุชูุฏุฉ' },
      practice: { title: 'ุงุฎุชุจุงุฑ ุชุฏุฑูุจู ูููุฒ', timeLimit: 45, description: '25 ุณุคุงู โข 45 ุฏูููุฉ โข ุชุญููู ููุตู' },
      challenge: { title: 'ุชุญุฏู ุงูุฃุณุฆูุฉ ุงูุตุนุจุฉ', timeLimit: 20, description: '10 ุฃุณุฆูุฉ ุตุนุจุฉ โข 20 ุฏูููุฉ โข ุชุญุฏู' }
    };

    const config = quizConfig[quizType];

    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="max-w-4xl mx-auto"
      >
        <div className="bg-gradient-to-r from-purple-50 to-indigo-50 rounded-2xl shadow-lg p-6 mb-6 border border-purple-200">
          <div className="flex justify-between items-center">
            <div>
              <div className="flex items-center gap-2 mb-2">
                <Crown className="w-6 h-6 text-purple-600" />
                <h2 className="text-2xl font-bold text-gray-900">{config.title}</h2>
              </div>
              <p className="text-purple-700">{config.description}</p>
            </div>
            <motion.button
              onClick={() => {
                setShowQuiz(false);
                setSelectedQuestions([]);
              }}
              className="bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-xl font-semibold transition-colors"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              ุงูุนูุฏุฉ
            </motion.button>
          </div>
        </div>

        <QuestionBank
          questions={selectedQuestions}
          timeLimit={config.timeLimit}
          showResults
          onComplete={handleQuizComplete}
        />
      </motion.div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-8"
    >
      {/* ุฑุฃุณ ุงููุณู ุงููููุฒ */}
      <div className="text-center">
        <div className="inline-flex items-center gap-3 bg-gradient-to-r from-purple-100 to-indigo-100 px-6 py-3 rounded-full mb-6">
          <Crown className="w-6 h-6 text-purple-600" />
          <span className="text-purple-700 font-bold">ุงูุฃุณุฆูุฉ ุงููููุฒุฉ</span>
          <Sparkles className="w-6 h-6 text-indigo-600" />
        </div>
        <h2 className="text-3xl font-bold text-gray-900 mb-4">
          ุงุฑุชูู ุจููุงุฑุงุชู ูุน ุงูุจุงูุฉ ุงููููุฒุฉ ๐
        </h2>
        <p className="text-lg text-gray-600 max-w-2xl mx-auto">
          ุงุญุตู ุนูู ูุฆุงุช ุงูุฃุณุฆูุฉ ุงููุชุฎุตุตุฉ ูุงูุดูุงุฏุงุช ุงููุนุชูุฏุฉ ูุงูุชุญูููุงุช ุงููุชูุฏูุฉ
        </p>
      </div>

      {/* ุญุงูุฉ ุงูุงุดุชุฑุงู */}
      {!isSubscribed && (
        <motion.div
          className="bg-gradient-to-r from-purple-50 to-indigo-50 rounded-2xl p-8 border border-purple-200 text-center"
          whileHover={{ scale: 1.02 }}
        >
          <Crown className="w-16 h-16 text-purple-600 mx-auto mb-4" />
          <h3 className="text-2xl font-bold text-purple-800 mb-4">ุงุดุชุฑู ูู ุงูุจุงูุฉ ุงููููุฒุฉ</h3>
          <p className="text-purple-700 mb-6">
            ุงุญุตู ุนูู ุฌููุน ุงูููุฒุงุช ุงููููุฒุฉ ูุงูุดูุงุฏุงุช ุงููุนุชูุฏุฉ
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <motion.button
              onClick={startFreeTrial}
              className="bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white px-8 py-4 rounded-xl font-bold text-lg transition-all duration-300 shadow-lg hover:shadow-xl"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Gift className="w-6 h-6 inline ml-2" />
              ุฌุฑุจ ูุฌุงูุงู ููุฏุฉ 7 ุฃูุงู
            </motion.button>
            <motion.button
              className="bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700 text-white px-8 py-4 rounded-xl font-bold text-lg transition-all duration-300 shadow-lg hover:shadow-xl"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <CreditCard className="w-6 h-6 inline ml-2" />
              ุงุดุชุฑู ุงูุขู - 49 ุฑูุงู
            </motion.button>
          </div>
        </motion.div>
      )}

      {/* ุงูุฅุญุตุงุฆูุงุช ุงููููุฒุฉ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <motion.div
          className="bg-gradient-to-br from-purple-50 to-indigo-50 rounded-2xl p-6 border border-purple-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
              <BookOpen className="w-6 h-6 text-purple-600" />
            </div>
            <span className="text-2xl font-bold text-purple-600">{stats.total}</span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">ุฃุณุฆูุฉ ูุชุฎุตุตุฉ</h3>
          <p className="text-sm text-gray-600">ูุญุชูู ูุชููุฒ ูุญุตุฑู</p>
        </motion.div>

        <motion.div
          className="bg-gradient-to-br from-blue-50 to-cyan-50 rounded-2xl p-6 border border-blue-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
              <Brain className="w-6 h-6 text-blue-600" />
            </div>
            <span className="text-2xl font-bold text-blue-600">{stats.aiGenerated}</span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">ุฐูุงุก ุงุตุทูุงุนู</h3>
          <p className="text-sm text-gray-600">ุฃุณุฆูุฉ ูููุฏุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู</p>
        </motion.div>

        <motion.div
          className="bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
              <Award className="w-6 h-6 text-green-600" />
            </div>
            <span className="text-2xl font-bold text-green-600">{Math.round(stats.avgSuccessRate)}%</span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">ูุนุฏู ุงููุฌุงุญ</h3>
          <p className="text-sm text-gray-600">ุฃุฏุงุก ูุชูุฏู</p>
        </motion.div>

        <motion.div
          className="bg-gradient-to-br from-orange-50 to-red-50 rounded-2xl p-6 border border-orange-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center">
              <Trophy className="w-6 h-6 text-orange-600" />
            </div>
            <span className="text-2xl font-bold text-orange-600">{stats.categories.length}</span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">ูุฆุงุช ูุชุฎุตุตุฉ</h3>
          <p className="text-sm text-gray-600">ููุงุถูุน ูุชูุฏูุฉ</p>
        </motion.div>
      </div>

      {/* ุฃููุงุน ุงูุงุฎุชุจุงุฑุงุช ุงููููุฒุฉ */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* ุงุฎุชุจุงุฑ ุงูุดูุงุฏุฉ */}
        <motion.div
          className="bg-gradient-to-br from-yellow-50 to-orange-50 rounded-2xl p-8 border border-yellow-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="text-center mb-6">
            <div className="w-16 h-16 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
              <Award className="w-8 h-8 text-white" />
            </div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">ุงุฎุชุจุงุฑ ุงูุดูุงุฏุฉ ุงููุนุชูุฏุฉ</h3>
            <p className="text-gray-600 text-sm">ุงุญุตู ุนูู ุดูุงุฏุฉ ูุนุชูุฏุฉ ูู IIA</p>
          </div>

          <div className="space-y-4 mb-6">
            <div className="flex items-center gap-3">
              <CheckCircle className="w-5 h-5 text-green-600" />
              <span className="text-sm text-gray-700">15 ุณุคุงู ูุชุฎุตุต</span>
            </div>
            <div className="flex items-center gap-3">
              <Clock className="w-5 h-5 text-blue-600" />
              <span className="text-sm text-gray-700">30 ุฏูููุฉ</span>
            </div>
            <div className="flex items-center gap-3">
              <Trophy className="w-5 h-5 text-purple-600" />
              <span className="text-sm text-gray-700">ุดูุงุฏุฉ ูุนุชูุฏุฉ</span>
            </div>
            <div className="flex items-center gap-3">
              <BarChart3 className="w-5 h-5 text-indigo-600" />
              <span className="text-sm text-gray-700">ุชูุฑูุฑ ููุตู</span>
            </div>
          </div>

          <motion.button
            onClick={startCertificationQuiz}
            disabled={!isSubscribed}
            className={`w-full py-3 px-6 rounded-xl font-semibold transition-all duration-300 ${
              isSubscribed
                ? 'bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 text-white shadow-lg hover:shadow-xl'
                : 'bg-gray-200 text-gray-500 cursor-not-allowed'
            }`}
            whileHover={isSubscribed ? { scale: 1.05 } : undefined}
            whileTap={isSubscribed ? { scale: 0.95 } : undefined}
          >
            {isSubscribed ? 'ุงุจุฏุฃ ุงุฎุชุจุงุฑ ุงูุดูุงุฏุฉ' : 'ูุชุงุญ ูููุดุชุฑููู ููุท'}
          </motion.button>
        </motion.div>

        {/* ุงุฎุชุจุงุฑ ุชุฏุฑูุจู */}
        <motion.div
          className="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 border border-blue-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="text-center mb-6">
            <div className="w-16 h-16 bg-gradient-to-r from-blue-400 to-indigo-500 rounded-full flex items-center justify-center mx-auto mb-4">
              <Target className="w-8 h-8 text-white" />
            </div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">ุงุฎุชุจุงุฑ ุชุฏุฑูุจู ุดุงูู</h3>
            <p className="text-gray-600 text-sm">ุชุฏุฑูุจ ูุชูุฏู ูุน ุชุญูููุงุช ููุตูุฉ</p>
          </div>

          <div className="space-y-4 mb-6">
            <div className="flex items-center gap-3">
              <CheckCircle className="w-5 h-5 text-green-600" />
              <span className="text-sm text-gray-700">25 ุณุคุงู ูุชููุน</span>
            </div>
            <div className="flex items-center gap-3">
              <Clock className="w-5 h-5 text-blue-600" />
              <span className="text-sm text-gray-700">45 ุฏูููุฉ</span>
            </div>
            <div className="flex items-center gap-3">
              <BarChart3 className="w-5 h-5 text-purple-600" />
              <span className="text-sm text-gray-700">ุชุญูููุงุช ูุชูุฏูุฉ</span>
            </div>
            <div className="flex items-center gap-3">
              <TrendingUp className="w-5 h-5 text-indigo-600" />
              <span className="text-sm text-gray-700">ุชุชุจุน ุงูุชูุฏู</span>
            </div>
          </div>

          <motion.button
            onClick={startPracticeQuiz}
            disabled={!isSubscribed}
            className={`w-full py-3 px-6 rounded-xl font-semibold transition-all duration-300 ${
              isSubscribed
                ? 'bg-gradient-to-r from-blue-500 to-indigo-500 hover:from-blue-600 hover:to-indigo-600 text-white shadow-lg hover:shadow-xl'
                : 'bg-gray-200 text-gray-500 cursor-not-allowed'
            }`}
            whileHover={isSubscribed ? { scale: 1.05 } : undefined}
            whileTap={isSubscribed ? { scale: 0.95 } : undefined}
          >
            {isSubscribed ? 'ุงุจุฏุฃ ุงูุงุฎุชุจุงุฑ ุงูุชุฏุฑูุจู' : 'ูุชุงุญ ูููุดุชุฑููู ููุท'}
          </motion.button>
        </motion.div>

        {/* ุชุญุฏู ุงูุฃุณุฆูุฉ ุงูุตุนุจุฉ */}
        <motion.div
          className="bg-gradient-to-br from-red-50 to-pink-50 rounded-2xl p-8 border border-red-200"
          whileHover={{ scale: 1.05 }}
        >
          <div className="text-center mb-6">
            <div className="w-16 h-16 bg-gradient-to-r from-red-400 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4">
              <Zap className="w-8 h-8 text-white" />
            </div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">ุชุญุฏู ุงูุฃุณุฆูุฉ ุงูุตุนุจุฉ</h3>
            <p className="text-gray-600 text-sm">ุงุฎุชุจุฑ ููุณู ูุน ุฃุตุนุจ ุงูุฃุณุฆูุฉ</p>
          </div>

          <div className="space-y-4 mb-6">
            <div className="flex items-center gap-3">
              <CheckCircle className="w-5 h-5 text-green-600" />
              <span className="text-sm text-gray-700">10 ุฃุณุฆูุฉ ุตุนุจุฉ</span>
            </div>
            <div className="flex items-center gap-3">
              <Clock className="w-5 h-5 text-blue-600" />
              <span className="text-sm text-gray-700">20 ุฏูููุฉ</span>
            </div>
            <div className="flex items-center gap-3">
              <Trophy className="w-5 h-5 text-purple-600" />
              <span className="text-sm text-gray-700">ุดุงุฑุงุช ูุฅูุฌุงุฒุงุช</span>
            </div>
            <div className="flex items-center gap-3">
              <Users className="w-5 h-5 text-indigo-600" />
              <span className="text-sm text-gray-700">ููุญุฉ ุงูุตุฏุงุฑุฉ</span>
            </div>
          </div>

          <motion.button
            onClick={startChallengeQuiz}
            disabled={!isSubscribed}
            className={`w-full py-3 px-6 rounded-xl font-semibold transition-all duration-300 ${
              isSubscribed
                ? 'bg-gradient-to-r from-red-500 to-pink-500 hover:from-red-600 hover:to-pink-600 text-white shadow-lg hover:shadow-xl'
                : 'bg-gray-200 text-gray-500 cursor-not-allowed'
            }`}
            whileHover={isSubscribed ? { scale: 1.05 } : undefined}
            whileTap={isSubscribed ? { scale: 0.95 } : undefined}
          >
            {isSubscribed ? 'ุงุจุฏุฃ ุงูุชุญุฏู' : 'ูุชุงุญ ูููุดุชุฑููู ููุท'}
          </motion.button>
        </motion.div>
      </div>

      {/* ููุฒุงุช ุงูุจุงูุฉ ุงููููุฒุฉ */}
      <div className="bg-gradient-to-r from-purple-50 to-indigo-50 rounded-2xl p-8 border border-purple-200">
        <h3 className="text-2xl font-bold text-purple-800 mb-8 text-center">ููุฒุงุช ุงูุจุงูุฉ ุงููููุฒุฉ</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
              <Award className="w-5 h-5 text-purple-600" />
            </div>
            <div>
              <span className="text-purple-700 font-medium">ุดูุงุฏุงุช ูุนุชูุฏุฉ</span>
              <p className="text-sm text-gray-600">ุดูุงุฏุงุช ูุนุชุฑู ุจูุง ุฏูููุงู</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
              <BarChart3 className="w-5 h-5 text-purple-600" />
            </div>
            <div>
              <span className="text-purple-700 font-medium">ุชุญูููุงุช ูุชูุฏูุฉ</span>
              <p className="text-sm text-gray-600">ุชูุงุฑูุฑ ููุตูุฉ ููุฃุฏุงุก</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
              <Brain className="w-5 h-5 text-purple-600" />
            </div>
            <div>
              <span className="text-purple-700 font-medium">ุฐูุงุก ุงุตุทูุงุนู</span>
              <p className="text-sm text-gray-600">ุฃุณุฆูุฉ ูุฎุตุตุฉ ูุฐููุฉ</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
              <Trophy className="w-5 h-5 text-purple-600" />
            </div>
            <div>
              <span className="text-purple-700 font-medium">ุดุงุฑุงุช ูุฅูุฌุงุฒุงุช</span>
              <p className="text-sm text-gray-600">ูุธุงู ุชุญููุฒู ูุชูุงูู</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
              <Users className="w-5 h-5 text-purple-600" />
            </div>
            <div>
              <span className="text-purple-700 font-medium">ููุงูุณุฉ ูุน ุงูุขุฎุฑูู</span>
              <p className="text-sm text-gray-600">ููุญุงุช ุงูุตุฏุงุฑุฉ ูุงูุชุญุฏูุงุช</p>
            </div>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
              <Shield className="w-5 h-5 text-purple-600" />
            </div>
            <div>
              <span className="text-purple-700 font-medium">ุฏุนู ููู</span>
              <p className="text-sm text-gray-600">ูุณุงุนุฏุฉ ุนูู ูุฏุงุฑ 24 ุณุงุนุฉ</p>
            </div>
          </div>
        </div>
      </div>

      {/* ุนุฑุถ ุฎุงุต */}
      {!isSubscribed && (
        <motion.div
          className="bg-gradient-to-r from-green-400 to-blue-500 rounded-2xl p-8 text-white text-center"
          whileHover={{ scale: 1.02 }}
        >
          <Gem className="w-16 h-16 mx-auto mb-4" />
          <h3 className="text-2xl font-bold mb-4">ุนุฑุถ ุฎุงุต ูุญุฏูุฏ ุงูููุช!</h3>
          <p className="text-lg mb-6 opacity-90">
            ุงุดุชุฑู ุงูุขู ูุงุญุตู ุนูู ุดูุฑ ูุฌุงูู ุฅุถุงูู + ุดูุงุฏุฉ ูุฌุงููุฉ
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <motion.button
              className="bg-white text-blue-600 px-8 py-4 rounded-xl font-bold text-lg hover:bg-gray-100 transition-colors"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              ุงุดุชุฑู ุจุงูุนุฑุถ ุงูุฎุงุต - 39 ุฑูุงู
            </motion.button>
            <motion.button
              onClick={startFreeTrial}
              className="bg-transparent border-2 border-white text-white px-8 py-4 rounded-xl font-bold text-lg hover:bg-white hover:text-blue-600 transition-colors"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              ุฌุฑุจ ูุฌุงูุงู ุฃููุงู
            </motion.button>
          </div>
        </motion.div>
      )}
    </motion.div>
  );
};

export default PremiumSection;
